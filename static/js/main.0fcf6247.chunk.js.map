{"version":3,"sources":["components/Display.jsx","components/Buttons.jsx","components/Keyboard.jsx","components/Container.jsx","components/App.jsx","index.js"],"names":["Display","props","react_default","a","createElement","className","display","Buttons","console","log","value","onClick","digitHandler","class","Keyboard","src_components_Buttons","Container","state","input","operator","inputArray","val","tempArray","_this","isNaN","tempOperator","setState","concat","operatorHandler","push","tempValue","parseInt","join","clearDisplay","percentage","division","multiplication","subtraction","addition","equals","negateValue","src_components_Display","this","src_components_Keyboard","Component","App","src_components_Container","ReactDOM","render","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.0fcf6247.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Display.css\";\n\nconst Display = props => {\n  return <div className=\"display\">{props.display}</div>;\n};\n\nexport default Display;\n","import React from \"react\";\nimport \"./Buttons.css\";\n\nconst Buttons = props => {\n  console.log(props.value);\n  return (\n    <button\n      onClick={() => props.digitHandler(props.value)}\n      className={props.class}\n      // value={props.value}\n    >\n      {props.value}\n    </button>\n  );\n};\n\nexport default Buttons;\n","import React from \"react\";\nimport \"./Keyboard.css\";\n\nimport Buttons from \"./Buttons\";\n\nconst Keyboard = props => {\n  return (\n    <div className=\"keyboard-grid\">\n      <Buttons\n        digitHandler={props.digitHandler}\n        value=\"AC\"\n        class=\"buttons function-buttons\"\n      />\n      <Buttons\n        digitHandler={props.digitHandler}\n        value=\"+/-\"\n        class=\"buttons function-buttons\"\n      />\n      <Buttons\n        digitHandler={props.digitHandler}\n        value=\"%\"\n        class=\"buttons function-buttons\"\n      />\n      <Buttons\n        digitHandler={props.digitHandler}\n        value=\"รท\"\n        class=\"buttons operator-buttons\"\n      />\n      <Buttons\n        digitHandler={props.digitHandler}\n        value={7}\n        class=\"buttons number-buttons\"\n      />\n      <Buttons\n        digitHandler={props.digitHandler}\n        value={8}\n        class=\"buttons number-buttons\"\n      />\n      <Buttons\n        digitHandler={props.digitHandler}\n        value={9}\n        class=\"buttons number-buttons\"\n      />\n      <Buttons\n        digitHandler={props.digitHandler}\n        value=\"x\"\n        class=\"buttons operator-buttons\"\n      />\n      <Buttons\n        digitHandler={props.digitHandler}\n        value={4}\n        class=\"buttons number-buttons\"\n      />\n      <Buttons\n        digitHandler={props.digitHandler}\n        value={5}\n        class=\"buttons number-buttons\"\n      />\n      <Buttons\n        digitHandler={props.digitHandler}\n        value={6}\n        class=\"buttons number-buttons\"\n      />\n      <Buttons\n        digitHandler={props.digitHandler}\n        value=\"-\"\n        class=\"buttons operator-buttons\"\n      />\n      <Buttons\n        digitHandler={props.digitHandler}\n        value={1}\n        class=\"buttons number-buttons\"\n      />\n      <Buttons\n        digitHandler={props.digitHandler}\n        value={2}\n        class=\"buttons number-buttons\"\n      />\n      <Buttons\n        digitHandler={props.digitHandler}\n        value={3}\n        class=\"buttons number-buttons\"\n      />\n      <Buttons\n        digitHandler={props.digitHandler}\n        value=\"+\"\n        class=\"buttons operator-buttons\"\n      />\n      <Buttons\n        digitHandler={props.digitHandler}\n        value={0}\n        class=\"buttons zero-button number-buttons\"\n      />\n      <Buttons\n        digitHandler={props.digitHandler}\n        value=\".\"\n        class=\"buttons number-buttons\"\n      />\n      <Buttons\n        digitHandler={props.digitHandler}\n        value=\"=\"\n        class=\"buttons operator-buttons\"\n      />\n    </div>\n  );\n};\n\nexport default Keyboard;\n","import React, { Component } from \"react\";\nimport \"./Container.css\";\nimport Display from \"./Display\";\nimport Keyboard from \"./Keyboard\";\n\nclass Container extends Component {\n  state = {\n    value: 0,\n    input: 0,\n    operator: null,\n    inputArray: [],\n    display: 0\n  };\n\n  digitHandler = val => {\n    let tempArray = this.state.inputArray;\n    if (!isNaN(val) || val === \".\") {\n      tempArray.push(val);\n      this.setState({ inputArray: tempArray });\n      console.log(`inputArray: ${this.state.inputArray}`);\n      let tempValue = parseInt(this.state.inputArray.join(\"\"));\n      this.setState({ input: tempValue, display: tempValue });\n    } else {\n      if (this.state.operator === null) {\n        let tempOperator = val;\n        this.setState({\n          operator: tempOperator,\n          value: this.state.input,\n          inputArray: []\n        });\n        console.log(`operator: ${this.state.operator}`);\n      } else {\n        if (this.state.value > 0) {\n          this.operatorHandler(val);\n        } else {\n          let tempOperator = val;\n          this.setState({ operator: tempOperator });\n          console.log(`operator: ${this.state.operator}`);\n        }\n      }\n    }\n  };\n\n  operatorHandler = val => {\n    console.log(\"this is the switch\");\n    if (val === \"AC\") {\n      this.clearDisplay();\n    } else {\n      switch (this.state.operator) {\n        case \"%\":\n          this.percentage();\n          break;\n        case \"รท\":\n          this.division();\n          break;\n        case \"x\":\n          this.multiplication();\n          break;\n        case \"-\":\n          this.subtraction();\n          break;\n        case \"+\":\n          this.addition();\n          break;\n        default:\n          console.log(\"Error! that wasn't right...\");\n      }\n    }\n    this.setState({ operator: val });\n  };\n\n  addition = () => {\n    console.log(\"this is addition\");\n    let tempValue = this.state.value + this.state.input;\n    this.setState({ value: tempValue, inputArray: [], display: tempValue });\n  };\n\n  subtraction = () => {\n    let tempValue = this.state.value - this.state.input;\n    this.setState({ value: tempValue, inputArray: [], display: tempValue });\n  };\n\n  multiplication = () => {\n    let tempValue = this.state.value * this.state.input;\n    this.setState({ value: tempValue, inputArray: [], display: tempValue });\n  };\n  division = () => {\n    let tempValue = this.state.value / this.state.input;\n    this.setState({ value: tempValue, inputArray: [], display: tempValue });\n  };\n  clearDisplay = () => {\n    this.setState({ operator: null, value: null, inputArray: [], display: 0 });\n  };\n\n  equals = () => {};\n\n  negateValue = () => {\n    let tempValue = -1 * this.state.value;\n    this.setState({ value: tempValue, inputArray: [], display: tempValue });\n  };\n\n  percentage = () => {\n    let tempValue = this.state.value / 100;\n    this.setState({\n      value: tempValue,\n      inputArray: [],\n      operator: null,\n      display: tempValue\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Display display={this.state.display} className=\"display\" />\n        <Keyboard digitHandler={this.digitHandler} />\n      </div>\n    );\n  }\n}\n\nexport default Container;\n","import React from \"react\";\nimport Container from \"./Container\";\nimport \"./App.css\";\n\nconst App = () => {\n  return <Container />;\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}